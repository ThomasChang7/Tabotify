{"version":3,"sources":["../../src/server/auth/index.js"],"names":["SpotifyStrategy","require","Strategy","passport","User","serializeUser","user","done","id","deserializeUser","query","findById","then","catch","error","use","clientID","process","env","SPOTIFY_CLIENT_ID","clientSecret","SPOTIFY_CLIENT_SECRET","callbackURL","URL","accessToken","refreshToken","profile","userProfile","name","displayName","email","emails","value","username","photo","photos","upsert","where","console","log","module","exports"],"mappings":"AAAA,IAAMA,kBAAkBC,QAAQ,kBAAR,EAA4BC,QAApD;AACA,IAAMC,WAAWF,QAAQ,cAAR,CAAjB;AACA,IAAMG,OAAOH,QAAQ,gBAAR,CAAb;;AAEAE,SAASE,aAAT,CAAuB,UAACC,IAAD,EAAOC,IAAP,EAAgB;AACrCA,OAAK,IAAL,EAAWD,KAAKE,EAAhB;AACD,CAFD;;AAIAL,SAASM,eAAT,CAAyB,UAACD,EAAD,EAAKD,IAAL,EAAc;AACrCH,OAAKM,KAAL,GACGC,QADH,CACYH,EADZ,EAEGI,IAFH,CAEQ;AAAA,WAAQL,KAAK,IAAL,EAAWD,IAAX,CAAR;AAAA,GAFR,EAGGO,KAHH,CAGS;AAAA,WAASN,KAAKO,KAAL,EAAY,IAAZ,CAAT;AAAA,GAHT;AAID,CALD;;AAOAX,SAASY,GAAT,CAAa,IAAIf,eAAJ,CACX;AACEgB,YAAUC,QAAQC,GAAR,CAAYC,iBADxB;AAEEC,gBAAcH,QAAQC,GAAR,CAAYG,qBAF5B;AAGEC,gBAAgBL,QAAQC,GAAR,CAAYK,GAAZ,IAAmB,uBAAnC;AAHF,CADW,EAMX,UAACC,WAAD,EAAcC,YAAd,EAA4BC,OAA5B,EAAqCnB,IAArC,EAA8C;AAC5C,MAAMoB,cAAc;AAClBC,UAAMF,QAAQG,WADI;AAElBC,WAAOJ,QAAQK,MAAR,CAAe,CAAf,EAAkBC,KAFP;AAGlBC,cAAUP,QAAQlB,EAHA;AAIlB0B,WAAOR,QAAQS,MAAR,CAAe,CAAf;AAJW,GAApB;;AAOA/B,OAAKM,KAAL,GACG0B,MADH,CACUT,WADV,EAEGU,KAFH,CAES,UAFT,EAEqBX,QAAQlB,EAF7B,EAGGI,IAHH,CAGQ,UAACN,IAAD,EAAU;AACdgC,YAAQC,GAAR,CAAYjC,IAAZ;AACAC,SAAK,IAAL,EAAWD,IAAX;AACD,GANH,EAOGO,KAPH,CAOS,UAACC,KAAD,EAAW;AAChBP,SAAKO,KAAL,EAAY,IAAZ;AACD,GATH;AAUD,CAxBU,CAAb;;AA2BA0B,OAAOC,OAAP,GAAiBtC,QAAjB","file":"index.js","sourcesContent":["const SpotifyStrategy = require('passport-spotify').Strategy;\nconst passport = require('koa-passport');\nconst User = require('../models/User');\n\npassport.serializeUser((user, done) => {\n  done(null, user.id);\n});\n\npassport.deserializeUser((id, done) => {\n  User.query()\n    .findById(id)\n    .then(user => done(null, user))\n    .catch(error => done(error, null));\n});\n\npassport.use(new SpotifyStrategy(\n  {\n    clientID: process.env.SPOTIFY_CLIENT_ID,\n    clientSecret: process.env.SPOTIFY_CLIENT_SECRET,\n    callbackURL: `${process.env.URL || 'http://localhost:8081'}/callback`,\n  },\n  (accessToken, refreshToken, profile, done) => {\n    const userProfile = {\n      name: profile.displayName,\n      email: profile.emails[0].value,\n      username: profile.id,\n      photo: profile.photos[0],\n    };\n\n    User.query()\n      .upsert(userProfile)\n      .where('username', profile.id)\n      .then((user) => {\n        console.log(user);\n        done(null, user);\n      })\n      .catch((error) => {\n        done(error, null);\n      });\n  },\n));\n\nmodule.exports = passport;\n"]}