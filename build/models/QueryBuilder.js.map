{"version":3,"sources":["../../src/server/models/QueryBuilder.js"],"names":["QueryBuilder","require","MyQueryBuilder","upsert","data","mainQuery","runBefore","result","builder","context","isMainQuery","clone","update","runAfter","insertAndFetch","first","module","exports"],"mappings":";;;;;;AAAA,IAAMA,eAAeC,QAAQ,WAAR,EAAqBD,YAA1C;;IAEME,c;;;;;;;;;2BACJC,M,mBAAOC,I,EAAM;AACX,QAAIC,kBAAJ;AACA,WAAO,KAAKC,SAAL,CAAe,UAACC,MAAD,EAASC,OAAT,EAAqB;AACzC,UAAI,CAACA,QAAQC,OAAR,GAAkBC,WAAvB,EAAoC;AAClC;AACA;AACA;AACA;AACAL,oBAAYG,QAAQG,KAAR,GAAgBF,OAAhB,CAAwB,EAAEC,aAAa,IAAf,EAAxB,CAAZ;AACA;AACA;AACAF,gBAAQI,MAAR,CAAeR,IAAf;AACD;AACD,aAAOG,MAAP;AACD,KAZM,EAYJM,QAZI,CAYK,UAACN,MAAD,EAASC,OAAT,EAAqB;AAC/B,UAAI,CAACA,QAAQC,OAAR,GAAkBC,WAAvB,EAAoC;AAClC,YAAIH,WAAW,CAAf,EAAkB;AAChB,iBAAOF,UAAUS,cAAV,CAAyBV,IAAzB,CAAP;AACD,SAFD,MAEO;AACL;AACA;AACA;AACA;AACA;AACA,iBAAOC,UAAUU,KAAV,EAAP;AACD;AACF;AACD,aAAOR,MAAP;AACD,KA1BM,CAAP;AA2BD,G;;;EA9B0BP,Y;;AAiC7BgB,OAAOC,OAAP,GAAiBf,cAAjB","file":"QueryBuilder.js","sourcesContent":["const QueryBuilder = require('objection').QueryBuilder;\n\nclass MyQueryBuilder extends QueryBuilder {\n  upsert(data) {\n    let mainQuery;\n    return this.runBefore((result, builder) => {\n      if (!builder.context().isMainQuery) {\n        // At this point the builder should only contain a bunch of `where*`\n        // operations. Store the `where` query for later use in the `runAfter`\n        // method. Also mark the query with `isMainQuery: true` so we can\n        // skip all this when this function is called for the `mainQuery`.\n        mainQuery = builder.clone().context({ isMainQuery: true });\n        // Call the `update` method on the original query turning it into an\n        // update operation.\n        builder.update(data);\n      }\n      return result;\n    }).runAfter((result, builder) => {\n      if (!builder.context().isMainQuery) {\n        if (result === 0) {\n          return mainQuery.insertAndFetch(data);\n        } else {\n          // Now we can use the `where` query we saved in the `runBefore`\n          // method to fetch the inserted results. It is noteworthy that this\n          // query will return the wrong results if the update changed any\n          // of the columns the where operates with. This also returns all\n          // updated models.\n          return mainQuery.first();\n        }\n      }\n      return result;\n    });\n  }\n}\n\nmodule.exports = MyQueryBuilder;\n"]}